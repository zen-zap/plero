
> plero-backend@1.0.0 test:commonroot
> node scripts/test_with_common_root.mjs

Setting TEST_ROOT to: /tmp/plero_common_test_577549ab-10c0-4748-9eac-93e77c4fa587

> plero-backend@1.0.0 build
> tsc


> plero-backend@1.0.0 test
> electron-mocha --main dist/main.js dist/tests/**/*.test.js



Using common TEST_ROOT: /tmp/plero_common_test_577549ab-10c0-4748-9eac-93e77c4fa587
Renderer Console [warning] : %cElectron Security Warning (Insecure Content-Security-Policy) font-weight: bold; This renderer process has either no Content Security
  Policy set or a policy with "unsafe-eval" enabled. This exposes users of
  this app to unnecessary security risks.

For more information and help, consult
https://electronjs.org/docs/tutorial/security.
This warning will not show up
once the app is packaged.
  - ai:complete returns a valid, non-empty completion
Using common TEST_ROOT: /tmp/plero_common_test_577549ab-10c0-4748-9eac-93e77c4fa587
[ai:classify] called with args: { query: 'console.log(' }
[ai:classify] response: 1
[ai:classify] called with args: { query: 'Hello, how are you?' }
[ai:classify] response: 2
[ai:classify] called with args: { query: 'Explain quantum computing in detail' }
[ai:classify] response: 3
[ai:classify] called with args: { query: "What's the weather today?" }
[ai:classify] response: 2
  ✔ ai: classifies the query (4187ms)
Using common TEST_ROOT: /tmp/plero_common_test_577549ab-10c0-4748-9eac-93e77c4fa587
[ai:classify] called with args: { query: "console.log('hello')" }
[ai:classify] response: 1
Classification result: { ok: true, data: 1 }
  ✔ ai: classifies the query (647ms)
Using common TEST_ROOT: /tmp/plero_common_test_577549ab-10c0-4748-9eac-93e77c4fa587
[ai:chat] called with args: { query: "Hello, what's TypeScript?", reasoning: false, web: false }
[Mode]: Basic Chat
[ai:chat] Chat Response: Hello! TypeScript is a programming language developed and maintained by Microsoft. It's a superset of JavaScript, which means it builds on JavaScript by adding static types. This helps developers catch errors early during development and makes the code more predictable and easier to debug. TypeScript compiles down to plain JavaScript, making it compatible with any environment that runs JavaScript, like web browsers or Node.js. It's particularly popular for large-scale applications where maintaining code quality and readability is crucial. If you have any more questions about it, feel free to ask!
Chat result: {
  ok: true,
  data: "Hello! TypeScript is a programming language developed and maintained by Microsoft. It's a superset of JavaScript, which means it builds on JavaScript by adding static types. This helps developers catch errors early during development and makes the code more predictable and easier to debug. TypeScript compiles down to plain JavaScript, making it compatible with any environment that runs JavaScript, like web browsers or Node.js. It's particularly popular for large-scale applications where maintaining code quality and readability is crucial. If you have any more questions about it, feel free to ask!"
}
  ✔ ai: chat returns conversational response (3850ms)
Using common TEST_ROOT: /tmp/plero_common_test_577549ab-10c0-4748-9eac-93e77c4fa587
[IPC] Calling  with [ 'dummy-f4a890a6-37fd-4ac7-ab45-ee912e578e5a.rs' ]
[IPC] Success:  => fn add(a: i32, b: i32) -> i32 {
    [[CURSOR]]
}

Status: {
  ok: true,
  data: 'fn add(a: i32, b: i32) -> i32 {\n    [[CURSOR]]\n}\n'
}
AI completion result: { ok: true, data: { content: 'return a + b;' }, error: null }
[IPC] Calling  with [
  'dummy-f4a890a6-37fd-4ac7-ab45-ee912e578e5a.rs',
  'return a + b;',
  undefined
]
[IPC] Success:  => undefined
Insert at cursor result: { ok: true, data: undefined }
[IPC] Calling  with [ 'dummy-f4a890a6-37fd-4ac7-ab45-ee912e578e5a.rs' ]
[IPC] Success:  => fn add(a: i32, b: i32) -> i32 {
    return a + b;[[CURSOR]]
}

Final file content: fn add(a: i32, b: i32) -> i32 {
    return a + b;[[CURSOR]]
}

  ✔ completes a Rust function by inserting just before the cursor marker and keeps marker
Using common TEST_ROOT: /tmp/plero_common_test_577549ab-10c0-4748-9eac-93e77c4fa587
[IPC] Calling  with [ 'test-folder-850e3795-4dbf-4e15-9d13-9fc4540e8b4a' ]
[IPC] Success:  => undefined
[IPC] Calling  with []
[IPC] Success:  => [
  {
    name: 'test-folder-850e3795-4dbf-4e15-9d13-9fc4540e8b4a',
    type: 'folder',
    path: 'test-folder-850e3795-4dbf-4e15-9d13-9fc4540e8b4a',
    children: []
  }
]
  ✔ createFolder and getTree reflect new folder
Using common TEST_ROOT: /tmp/plero_common_test_577549ab-10c0-4748-9eac-93e77c4fa587
[IPC] Calling  with [ 'test-7de237b8-458b-466d-8ae2-c7f1bca63950.txt', 'Hello, IPC!' ]
[IPC] Success:  => undefined
[IPC] Calling  with [ 'test-7de237b8-458b-466d-8ae2-c7f1bca63950.txt' ]
[IPC] Success:  => { exists: true }
[IPC] Calling  with [ 'test-7de237b8-458b-466d-8ae2-c7f1bca63950.txt' ]
[IPC] Success:  => Hello, IPC!
  ✔ saveFile, getFileContent, and exists
Using common TEST_ROOT: /tmp/plero_common_test_577549ab-10c0-4748-9eac-93e77c4fa587
[IPC] Calling  with [ 'meta-c80ad745-106a-461f-827c-76d442685df6.txt', 'Meta Info' ]
[IPC] Success:  => undefined
[IPC] Calling  with [ 'meta-c80ad745-106a-461f-827c-76d442685df6.txt' ]
[IPC] Success:  => {
  size: 9,
  mtime: 2025-07-02T19:40:18.107Z,
  ctime: 2025-07-02T19:40:18.107Z,
  atime: 2025-07-02T19:40:18.107Z,
  isFile: true,
  isDirectory: false,
  mode: 33204,
  ino: 131891,
  uid: 1000,
  gid: 1000
}
  ✔ stat returns metadata for file
Using common TEST_ROOT: /tmp/plero_common_test_577549ab-10c0-4748-9eac-93e77c4fa587
[IPC] Calling  with [ 'oldname-c1251c0c-b998-465f-92d0-4f19b70c7753.txt', 'data' ]
[IPC] Success:  => undefined
[IPC] Calling  with [
  'oldname-c1251c0c-b998-465f-92d0-4f19b70c7753.txt',
  'newname-b08fdb4d-8cdb-415b-8f75-0847b34a6199.txt'
]
[IPC] Success:  => undefined
[IPC] Calling  with [ 'oldname-c1251c0c-b998-465f-92d0-4f19b70c7753.txt' ]
[IPC] Success:  => { exists: false }
[IPC] Calling  with [ 'newname-b08fdb4d-8cdb-415b-8f75-0847b34a6199.txt' ]
[IPC] Success:  => { exists: true }
  ✔ renamePath renames file
Using common TEST_ROOT: /tmp/plero_common_test_577549ab-10c0-4748-9eac-93e77c4fa587
[IPC] Calling  with [ 'todelete-2a42d703-e0c6-4f58-9984-4f2a005a3561.txt', 'bye' ]
[IPC] Success:  => undefined
[IPC] Calling  with [ 'todelete-2a42d703-e0c6-4f58-9984-4f2a005a3561.txt' ]
[IPC] Success:  => undefined
[IPC] Calling  with [ 'todelete-2a42d703-e0c6-4f58-9984-4f2a005a3561.txt' ]
[IPC] Success:  => { exists: false }
  ✔ delFile deletes file
Using common TEST_ROOT: /tmp/plero_common_test_577549ab-10c0-4748-9eac-93e77c4fa587
[IPC] Calling  with [
  'parent-29052c67-2f62-480e-8a1a-d19d7f8d4e7c/child-a0a94888-f9bf-42c9-a525-bc4b76c827fe'
]
[IPC] Success:  => undefined
[IPC] Calling  with [
  'parent-29052c67-2f62-480e-8a1a-d19d7f8d4e7c/child-a0a94888-f9bf-42c9-a525-bc4b76c827fe/a-012751fa-178d-4e61-8c99-a54d7bdda548.txt',
  'abc'
]
[IPC] Success:  => undefined
[IPC] Calling  with [ 'parent-29052c67-2f62-480e-8a1a-d19d7f8d4e7c' ]
[IPC] Success:  => undefined
[IPC] Calling  with [ 'parent-29052c67-2f62-480e-8a1a-d19d7f8d4e7c' ]
[IPC] Success:  => { exists: false }
  ✔ delFolder deletes folders recursively
Using common TEST_ROOT: /tmp/plero_common_test_577549ab-10c0-4748-9eac-93e77c4fa587
[IPC] Calling  with [ 'dirinfo-6e2e0c7e-8c25-40d5-971f-5ebaf62707fe' ]
[IPC] Success:  => undefined
[IPC] Calling  with [ 'dirinfo-6e2e0c7e-8c25-40d5-971f-5ebaf62707fe' ]
[IPC] Success:  => {
  size: 4096,
  mtime: 2025-07-02T19:40:18.130Z,
  ctime: 2025-07-02T19:40:18.130Z,
  atime: 2025-07-02T19:40:18.130Z,
  isFile: false,
  isDirectory: true,
  mode: 16893,
  ino: 131891,
  uid: 1000,
  gid: 1000
}
  ✔ stat returns directory info
Using common TEST_ROOT: /tmp/plero_common_test_577549ab-10c0-4748-9eac-93e77c4fa587
[IPC] Calling  with [
  'tree-d8346058-0809-471e-8fd1-9ecdde78f033/branch-ab5dc632-13f5-469c-9035-687b38ca539d'
]
[IPC] Success:  => undefined
[IPC] Calling  with [
  'tree-d8346058-0809-471e-8fd1-9ecdde78f033/branch-ab5dc632-13f5-469c-9035-687b38ca539d/leaf-47cc2407-8698-4d0d-a0e2-9e90bf38de09.txt',
  'leaf'
]
[IPC] Success:  => undefined
[IPC] Calling  with []
[IPC] Success:  => [
  {
    name: 'tree-d8346058-0809-471e-8fd1-9ecdde78f033',
    type: 'folder',
    path: 'tree-d8346058-0809-471e-8fd1-9ecdde78f033',
    children: [ [Object] ]
  }
]
  ✔ getTree reflects nested structure
Using common TEST_ROOT: /tmp/plero_common_test_577549ab-10c0-4748-9eac-93e77c4fa587
[IPC] Calling  with [ 'test_cursor_insert.rs', 'a + b; ', undefined ]
[IPC] Success:  => undefined
  ✔ insertAtCursor inserts just before the marker and leaves marker in file
  - tavilySearch returns results for simple query

  13 passing (9s)
  2 pending


> plero-backend@1.0.0 posttest
> node scripts/cleanup_test_artifacts.mjs

Artifact Cleanup done!
Tests finished with exit code: 0
