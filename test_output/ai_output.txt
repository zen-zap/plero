
> plero@1.0.0 test:electron:ai
> npm run build && electron-mocha --main dist/main.js dist/tests/ipc_tests/aiIpc.test.js


> plero@1.0.0 build
> tsc



(node:28746) electron: Failed to load URL: file:///home/zen-zap/Code/plero/node_modules/electron-mocha/lib/index.html with error: ERR_FILE_NOT_FOUND
(Use `electron --trace-warnings ...` to show where the warning was created)
[28746:0719/002055.387315:ERROR:mojo/public/cpp/bindings/lib/interface_endpoint_client.cc:732] Message 0 rejected by interface blink.mojom.WidgetHost
Renderer Console [warning] : %cElectron Security Warning (Insecure Content-Security-Policy) font-weight: bold; This renderer process has either no Content Security
  Policy set or a policy with "unsafe-eval" enabled. This exposes users of
  this app to unnecessary security risks.

For more information and help, consult
https://electronjs.org/docs/tutorial/security.
This warning will not show up
once the app is packaged.
[ai:complete] called with args: { prompt: 'console.log(', model: 'gpt-4.1-mini', maxTokens: 10 }
[ai:complete] got result: AIMessage {
  "id": "chatcmpl-BukSWyKXwF3in7uXdWHJBof7JQJtg",
  "content": "\"Hello, world!\");",
  "additional_kwargs": {},
  "response_metadata": {
    "tokenUsage": {
      "promptTokens": 33,
      "completionTokens": 6,
      "totalTokens": 39
    },
    "finish_reason": "stop",
    "model_name": "gpt-4.1-mini-2025-04-14"
  },
  "tool_calls": [],
  "invalid_tool_calls": [],
  "usage_metadata": {
    "output_tokens": 6,
    "input_tokens": 33,
    "total_tokens": 39,
    "input_token_details": {
      "audio": 0,
      "cache_read": 0
    },
    "output_token_details": {
      "audio": 0,
      "reasoning": 0
    }
  }
}
  ✔ ai:complete returns a valid, non-empty completion (1278ms)
[ai:classify] called with args: { query: 'console.log(' }
[ai:classify] response: 1
Calling [ai:classify] --> query: console.log( expected: 1 classification: 1
[ai:classify] called with args: { query: 'Hello, how are you?' }
[ai:classify] response: 2
Calling [ai:classify] --> query: Hello, how are you? expected: 2 classification: 2
[ai:classify] called with args: { query: 'Explain quantum computing in detail' }
[ai:classify] response: 3
Calling [ai:classify] --> query: Explain quantum computing in detail expected: 3 classification: 3
[ai:classify] called with args: { query: "What's the weather today?" }
[28781:0719/002059.389144:ERROR:ui/gl/gl_surface_presentation_helper.cc:260] GetVSyncParametersIfAvailable() failed for 1 times!
[ai:classify] response: 4
Calling [ai:classify] --> query: What's the weather today? expected: 4 classification: 4
  ✔ ai: classifies the query (6791ms)
[ai:classify] called with args: { query: "console.log('hello')" }
[ai:classify] response: 1
Classification result: { ok: true, data: 1 }
  ✔ ai: classifies the query (922ms)
[ai:chat] called with args: { query: "Hello, what's TypeScript?", reasoning: false, web: false }
[Mode]: Basic Chat
[ai:chat] Chat Response: Hello! TypeScript is a programming language developed and maintained by Microsoft. It's a superset of JavaScript, which means it builds on JavaScript by adding optional static types. This allows developers to catch errors early in the development process and write more robust and maintainable code. TypeScript code is transpiled into regular JavaScript, which can then run in any environment where JavaScript is supported, such as web browsers and Node.js. It's particularly popular for large-scale applications due to its ability to help manage complex codebases. If you have any more questions about TypeScript, feel free to ask!
Chat result: {
  ok: true,
  data: "Hello! TypeScript is a programming language developed and maintained by Microsoft. It's a superset of JavaScript, which means it builds on JavaScript by adding optional static types. This allows developers to catch errors early in the development process and write more robust and maintainable code. TypeScript code is transpiled into regular JavaScript, which can then run in any environment where JavaScript is supported, such as web browsers and Node.js. It's particularly popular for large-scale applications due to its ability to help manage complex codebases. If you have any more questions about TypeScript, feel free to ask!"
}
  ✔ ai: chat returns conversational response (2864ms)

  4 passing (12s)

